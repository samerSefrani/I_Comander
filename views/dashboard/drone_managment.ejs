<!DOCTYPE html>
<html>
<head>


    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
    <meta charset="utf-8">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.css"/>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/js/bootstrap-select.min.js"></script>


    <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.1/build/pure-min.css">
    <!--[if lte IE 8]>
    <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.1/build/grids-responsive-old-ie-min.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
    <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.1/build/grids-responsive-min.css">
    <!--<![endif]--></head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<link rel="stylesheet" type="text/css" href="/style/icmd.css">


<title>Profile</title>

</head>

<style>

    body {
        background: #457b9d;
    }

    .pure-g {
        background: #A8DADC;
        border-radius: 1em;
        margin: 0em;
    }

    /* At the top level of your code */
    @media screen and (min-width: 35.5em) {
        .pure-g {
            margin: 3em;
        }
    }

    @media screen and (max-width: 48em) {
        #profilepic {
            order: -1;
        }

        #profile1 {
            order: -2;
        }
    }


</style>

<body>


<div id="layout">
    <% include ../partials/dashboard_menu.ejs %>

    <div id="main">

        <div class="pure-g" style="padding: 2em">
            <div class="pure-u-1 ">
                <h1>Drone Management</h1>
            </div>

            <div id="list_header" class="pure-u-1 ">
                <span style="">Drone List</span>
                <button id="add_drone_btn" class="pure-button-primary" data-toggle="collapse" data-target="#add_drone"
                        style="width: 50%; border-radius: 0px; border: hidden; float: right">
                    Add Drone
                </button>
            </div>
            <div id="add_drone" class="pure-u-1 collapse" style="background: #99121d">
                TODO: Fill IN
            </div>
            <div id="drone_list" class="pure-u-1">
                TODO: FIll in
                <!--TODO: Fill in div with js-->
            </div>
        </div>
    </div>
</div>
</body>
<script src="/js/icmd.js"></script>


<style>
    .drone_item {
        border-style: solid;
        border-width: 2px;
        border-radius: 0.5em;
        margin: .5em;
        /*background: #04a9f4;*/
        background: mintcream;
        /*transition: height 1s ease-in-out;*/
    }

    .drone_image {
        width: 3em;
        height: 3em;
        border-radius: 0.5em;
        padding: 3px;
    }

    .drone_item button {
        border: none;
        float: right;
        /*padding: 0.5em;*/
        background: #457b9d;
        height: 2em;
        margin: 0.5em;
    }

</style>

<script>

    function getServerData(path) {
        //  ie /api/getDrones
        return fetch(path).then(response => {
            if (!response.ok) {
                throw Error(response.statusText);
            }
            return response.json();
        });
    }


    // function serverApiFetch(path) {
    //
    //     return fetch(path, {method: method, credentials: "same-origin"}).then(r=>{
    //         if(!r.ok) throw Error(r.statusText);
    //         return r.json();
    //     })
    // }
    //

    async function editSubmit(e) {
        e.preventDefault();
        console.log(e.target);
        const params = new URLSearchParams([...new FormData(e.target).entries()]);

        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        const response = await fetch("/api/edit_drone", {method: "POST", body: params, credentials: "same-origin"})
        console.log(response);

        // const r = await response.json();

        // serverApiFetch('/api/editDrone', 'POST').then(r=>{
        //     console.log(r);
        // })
    }

    async function init_drone_list() {
        dl = document.getElementById('drone_list');
        // todo: properly make this async
        // const response = fetch("/api/getDrones", {method: "GET", credentials: "same-origin"});
        // const c_response = fetch("/api/getChecklist", {method: "GET", credentials: "same-origin"});

        // let responses = []
        // responses.push(fetch("/api/getDrones", {method: "GET", credentials: "same-origin"}).then(r=>{
        //     if(!r.ok) throw Error(r.statusText);
        //     return r.json();
        // }));
        // responses.push(fetch("/api/getChecklist", {method: "GET", credentials: "same-origin"}).then(r=>{
        //     if(!r.ok) throw Error(r.statusText);
        //     return r.json();
        // }));

        let responses = []
        responses.push(getServerData('/api/get_drones'));
        responses.push(getServerData('/api/get_checklist'));

        Promise.all(responses).then(value => {
            // let dronedb = await value[0].json();
            // let listdb = await value[1].json();
            // console.log(value)
            // if (!value[0].ok) {
            //     throw Error(value[0].statusText);
            // }
            // if (!value[1].ok) {
            //     throw Error(value[1].statusText);
            // }

            let dronedb = value[0];
            let listdb = value[1];

            dronedb.drones.forEach((d) => {
                let item = document.createElement('div')
                item.classList.add('drone_item')
                item.classList.add('pure-u-1')

                let list_options = ``;
                listdb.lists.forEach(l => {
                    list_options += `<option value='${l.lid}'>${l.label}</option>`;
                })

                let disabled = ''
                if(d.disabled) disabled = 'checked'

                item.innerHTML = `
                <img src="/images/drone${d.did}.jpg" class="drone_image">
                <span> ${d.name}:${d.type} | louckout: ${d.lockedout} | disabled: ${d.disabled} </span>
                <button class="pure-button-primary" style="background: mintcream; color: #99121d">X</button>
                <button class="pure-button-primary" data-toggle="collapse" data-target="#edit_drone_${d.did}">Edit</button>

                <div id="edit_drone_${d.did}" class="pure-u-1 collapse">
                <form id='edit_form_${d.did}' class="pure-form pure-form-aligned"
                      action="#" onsubmit="editSubmit" style="height: 100%; background: mintcream">

                    <input hidden name='did' type="number" value='${d.did}'>
                    <fieldset>
                        <div class="pure-control-group">
                            <label for="name">Drone Name</label>
                            <input name="name" type="text" placeholder="Name"
                                   value="${d.name}">
                        </div>
                        <div class="pure-control-group">
                            <label for="type">Drone Type</label>
                            <input name="type" type="text" placeholder="Type"
                                   value="${d.type}">
                        </div>

                        <div class="pure-control-group">
                            <label for="pre">Preflight List</label>
                            <select name="preflight_lid">
                             ${list_options}
                            </select>
                        </div>

                         <div class="pure-control-group">
                            <label for="post_list">Postflight List</label>
                            <select name="postflight_lid">
                             ${list_options}
                            </select>
                        </div>

                        <div class="pure-control-group">
                           <div class="pure-control-group">
                            <label for="disabled">Disable Drone</label>
                        <label class="toggle" style='text-align: left;'>
                            <input name='disabled' class="toggle-checkbox" type="checkbox" ${disabled}>
                                <div class="toggle-switch"></div>
<!--                            <div class="toggle-label">Disable Drone</div>-->
                        </label>
                        </div>

                        <div class="pure-controls">
                            <button type="submit" class="pure-button pure-button-primary" style="float: left">Submit
                            </button>
                        </div>
                    </fieldset>
                </form>

                </div>
                `

                // item.innerText = d.name;
                console.log(d)

                dl.appendChild(item);
                document.getElementById(`edit_form_${d.did}`).onsubmit = editSubmit


            });

        });
        // await response;
        // console.log(response)


    }

    init_drone_list();
    //
    // function editClicked() {
    //
    //     btn = document.getElementById('editButton');
    //
    //     // console.log(btn)
    //     // console.log("asd")
    //     // console.log(btn.style.width)
    //
    //     if (btn.style.width == "50%")
    //         btn.style.width = '100%';
    //     else
    //         btn.style.width = "50%";
    //     // console.log('Clicked button123')
    // }
    //
    // document.getElementById('edit_user').onsubmit = async function (e) {
    //
    //     e.preventDefault();
    //     const params = new URLSearchParams([...new FormData(e.target).entries()]);
    //     const response = await fetch("/api/edit_profile", {method: "POST", body: params, credentials: "same-origin"})
    //     const r = await response.json();
    //     // const response = await new Response(params);
    //
    //     info = document.getElementById('s_error');
    //     // info.style.height = "0em";
    //     // info.style.padding = '10px';
    //     if (r.error == false) {
    //
    //         info.style.background = '#28a745';
    //         // info.style.background = '--green'
    //         info.innerText = "Edits Successfully Made"
    //
    //         document.getElementById('s_displayName').innerHTML = r.user.displayName;
    //         document.getElementById('s_email').innerHTML = r.user.email;
    //         document.getElementById('preview').src = r.user.base64data;
    //     } else {
    //         info.style.background = "#dc3545";
    //         info.innerText = r.error;
    //     }
    //     console.log(info.clientHeight);
    //     console.log(info.scrollHeight);
    //     if (info.clientHeight < info.scrollHeight)
    //
    //         info.style.height = info.scrollHeight + 10 + 'px';
    //
    //     console.log(JSON.stringify(r));
    //     console.log("Submited fourm")
    // }
</script>
</html>
