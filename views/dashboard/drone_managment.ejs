<!DOCTYPE html>
<html>
<head>


    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
    <meta charset="utf-8">

    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>

    <link rel="stylesheet" href="/css/pure-min.css">
    <!--[if lte IE 8]>
    <link rel="stylesheet" href="/css/grids-responsive-old-ie-min.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
    <link rel="stylesheet" href="/css/grids-responsive-min.css">
    <![endif]-->

<link rel="stylesheet" type="text/css" href="/style/icmd.css">


<title>Drones-icmd</title>

    <script>

        function getServerData(path) {
            //  ie /api/getDrones
            return fetch(path, {method: 'GET', credentials: "same-origin"}).then(r => {
                if (!r.ok) throw Error(r.statusText);
                return r.json();
            })
        }

        let dronedb_p = (getServerData('/api/get_drones'));
        let listdb_p = (getServerData('/api/get_checklist'));
    </script>


</head>

<style>

    body {
        background: #457b9d;
    }

    .pure-g {
        background: #A8DADC;
        border-radius: 1em;
        margin: 0em;
    }

    /* At the top level of your code */
    @media screen and (min-width: 35.5em) {
        .pure-g {
            margin: 3em;
        }
    }

    @media screen and (max-width: 48em) {
        #profilepic {
            order: -1;
        }

        #profile1 {
            order: -2;
        }
    }


</style>

<body>


<div id="layout">
    <% include ../partials/dashboard_menu.ejs %>

    <div id="main">

        <div class="pure-g" style="padding: 2em">
            <div class="pure-u-1 ">
                <h1>Drone Management</h1>
            </div>

            <div id="list_header" class="pure-u-1 ">
                <span style="">Drone List</span>
                <button id="add_drone_btn" class="pure-button-primary" data-toggle="collapse" data-target="#add_drone"
                        style="width: 50%; border-radius: 0px; border: hidden; float: right">
                    Add Drone
                </button>
            </div>
            <div id="add_drone" class="pure-u-1 collapse" style="background: #99121d">
            </div>
            <div id="drone_list" class="pure-u-1">
                <!--Fill in div with js init drone list()-->
            </div>

        </div>
    </div>
</div>
</body>
<script src="/js/icmd.js"></script>


<style>
    .drone_item {}
    .drone_item .pure-g{
        border-style: solid;
        border-width: 2px;
        border-radius: 0.5em;
        margin: .5em;
        /*background: #04a9f4;*/
        background: mintcream;
        /*transition: height 1s ease-in-out;*/
    }

    .drone_image {
        width: 3em;
        height: 3em;
        border-radius: 0.5em;
        padding: 3px;
    }

    .drone_item button {
        border: none;
        float: right;
        /*padding: 0.5em;*/
        background: #457b9d;
        height: 2em;
        margin: 0.5em;
    }

</style>

<script>
    async function deleteSubmit( did) {
        // console.log(e);
        // e.preventDefault();
        // console.log(e.target);
        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        console.log('delete: '+ did);
        // let data = new FormData(;
        // data.set('did', did);


        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        const response = await fetch("/api/delete_drone", {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: "POST",
            body: JSON.stringify({did: did}),

            credentials: "same-origin"
        });

        r = await response.json();
        // console.log(r);
        // let drones = r;

        var element = document.getElementById(`drone_item_${did}`);
        element.parentNode.removeChild(element);

        console.log("Successfully deleted drone")


    }

    async function editSubmit(e) {
        e.preventDefault();
        // console.log(e.target);
        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        let data = new FormData(e.target)
        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        const response = await fetch("/api/edit_drone", {method: "POST", body: data, credentials: "same-origin"})
        r = await response.json();
        // console.log(r);
        let drones = r;
        let d = r.updated_drone

        document.getElementById(`e_name${d.did}`).innerHTML = `${d.name}:${d.type}`
        document.getElementById(`e_lockedout${d.did}`).innerHTML = `lockedout: ${d.lockedout}`
        document.getElementById(`e_disabled${d.did}`).innerHTML = `disabled: ${d.disabled}`

        console.log("Succssesfully edited drone")
        // console.log(response);

    }

    async function addSubmit(e) {
        e.preventDefault();
        let dl = document.getElementById('drone_list');

        console.log(e.target);

         let data = new FormData(e.target)
        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        const response = await fetch("/api/edit_drone", {method: "POST", body: data, credentials: "same-origin"})
        // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        //
        // // const params = new URLSearchParams([...new FormData(e.target).entries()]);
        // const response = await fetch("/api/edit_drone", {method: "POST", body: params, credentials: "same-origin"})
        r = await response.json();
        // console.log(r);
        let drones = r;
        let d = r.updated_drone

        let item = gen_drone_item(d, list_options);
        dl.appendChild(item);

        console.log("Successfully added drone")
        // console.log(response);

    }
    // data-toggle="modal" data-target="#deleteModal${d.did}"
    function gen_delete_confirm(d) {
        return `
            <div class="modal fade" id="deleteModal${d.did}" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel${d.did}" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteModalLabel${d.did}">Are you sure you with to delete drone: ${d.name}?\n This can't be undone!</h5>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="deleteSubmit(${d.did})">Continue</button>
                        </div>
                    </div>
                </div>
            </div>`
    }

    function gen_drone_form(d, list_options) {
        if(d == null) {
            d = {
                did:-1,
                name:'',
                type:'',
            }
        }

        let disabled = '';
        if(d.disabled) disabled = 'checked';

        return `<form id='edit_form_${d.did}' class="pure-form pure-form-aligned" enctype='multipart/form-data'
                      action="#" style="height: 100%; background: mintcream">
                    <input hidden name='did' type="number" value='${d.did}'>
                    <fieldset>

                        <div class="pure-control-group">
                            <label for="photo">Profile Photo</label>
                            <input id="input_photo" name="photo" type="file" accept="image/*" onchange="">
                        </div>
                        <div class="pure-control-group">
                            <label for="preview">Photo Preview</label>
                            <img id="photo_preview_${d.did}" name="preview" src="" height="200" with="200" alt="Image preview">
                        </div>

                        <div class="pure-control-group">
                            <label for="name">Drone Name</label>
                            <input name="name" type="text" placeholder="Name"
                                   value="${d.name}">
                        </div>
                        <div class="pure-control-group">
                            <label for="type">Drone Type</label>
                            <input name="type" type="text" placeholder="Type"
                                   value="${d.type}">
                        </div>

                        <div class="pure-control-group">
                            <label for="pre">Preflight List</label>
                            <select name="preflight_lid">
                             ${list_options}
                            </select>
                        </div>

                         <div class="pure-control-group">
                            <label for="post_list">Postflight List</label>
                            <select name="postflight_lid">
                             ${list_options}
                            </select>
                        </div>

                        <div class="pure-control-group">
                           <div class="pure-control-group">
                            <label for="disabled">Disable Drone</label>
                        <label class="toggle" style='text-align: left;'>
                            <input name='disabled' class="toggle-checkbox" type="checkbox" ${disabled}>
                                <div class="toggle-switch"></div>
                        </label>
                        </div>

                        <div class="pure-controls">
                            <button type="submit" class="pure-button pure-button-primary" style="float: left">Submit
                            </button>
                        </div>
                    </fieldset>
                </form>`
    }

    function gen_drone_item(d, list_options) {

        let item = document.createElement('div')
        item.classList.add('drone_item')
        item.classList.add('pure-u-1')

        item.id = `drone_item_${d.did}`;




        let disabled = '';
        if(d.disabled) disabled = 'checked';

        let _form = gen_drone_form(d,list_options);
        // data-toggle="modal" data-target="#deleteModal${d.did}"
        item.innerHTML = `

                <div  id="e_info${d.did}" class="pure-g">

                        <div class="pure-u-1 pure-u-sm-1-4 pure-u-md-1-8" id="e_image${d.did}" style="">

                            <img src="/images/${d.image}" class="drone_image">
                        </div>

                        <div class="pure-u-1 pure-u-sm-3-4 pure-u-md-3-8" id="e_name${d.did}" style="">
                            ${d.name}:${d.type}
                        </div>
                        <div class="pure-u-1 pure-u-sm-1-2 pure-u-md-1-8" id="e_lockedout${d.did}">
                            lockedout: ${d.lockedout}
                        </div>
                        <div class="pure-u-1 pure-u-sm-1-2 pure-u-md-1-8" id="e_disabled${d.did}">
                            disabled: ${d.disabled}
                        </div>

                    <div class="pure-u-1 pure-u-md-1-4" id="e_btns${d.did}" style="float: right;">
                         <button class="pure-button-primary" style="background: mintcream; color: #99121d" data-toggle="modal" data-target="#deleteModal${d.did}" >X</button>
                         <button class="pure-button-primary" data-toggle="collapse" data-target="#edit_drone_${d.did}">Edit</button>
                    </div>




                <div id="edit_drone_${d.did}" class="pure-u-1 collapse" style="border-width: 2px 0 0 0; border-style: solid">
                    ${_form}
                </div>
                </div>

                ${gen_delete_confirm(d)}
                `

        console.log(d)
        return item;

    }

    async function init_drone_list() {
        dl = document.getElementById('drone_list');
        // todo: properly make this async

        let responses = []
        responses.push(dronedb_p);
        responses.push(listdb_p);
        // console.log(responses)
        Promise.all(responses).then(value => {

            console.log(value)
            dronedb = value[0];
            listdb = value[1];

            list_options = ``;
            listdb.lists.forEach(l => {
                list_options += `<option value='${l.lid}'>${l.label}</option>`;
            })

            let adddiv = document.getElementById('add_drone');
            adddiv.innerHTML = gen_drone_form(null, list_options)
            document.getElementById(`edit_form_-1`).onsubmit = addSubmit
            // console.log(dronedb);
            dronedb.drones.forEach((d) => {
                let item = gen_drone_item(d, list_options);
                dl.appendChild(item);
                document.getElementById(`edit_form_${d.did}`).onsubmit = editSubmit

            });

        });
    }

    let dronedb = {};
    let listdb = {};
    let list_options = ``;
    init_drone_list();

</script>
</html>
